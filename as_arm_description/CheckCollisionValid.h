// Generated by gencpp from file as_arm_description/CheckCollisionValid.msg
// DO NOT EDIT!


#ifndef AS_ARM_DESCRIPTION_MESSAGE_CHECKCOLLISIONVALID_H
#define AS_ARM_DESCRIPTION_MESSAGE_CHECKCOLLISIONVALID_H

#include <ros/service_traits.h>


#include <as_arm_description/CheckCollisionValidRequest.h>
#include <as_arm_description/CheckCollisionValidResponse.h>


namespace as_arm_description
{

struct CheckCollisionValid
{

typedef CheckCollisionValidRequest Request;
typedef CheckCollisionValidResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct CheckCollisionValid
} // namespace as_arm_description


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::as_arm_description::CheckCollisionValid > {
  static const char* value()
  {
    return "c3de35c7760ea7c2f1ab04370b06a212";
  }

  static const char* value(const ::as_arm_description::CheckCollisionValid&) { return value(); }
};

template<>
struct DataType< ::as_arm_description::CheckCollisionValid > {
  static const char* value()
  {
    return "as_arm_description/CheckCollisionValid";
  }

  static const char* value(const ::as_arm_description::CheckCollisionValid&) { return value(); }
};


// service_traits::MD5Sum< ::as_arm_description::CheckCollisionValidRequest> should match 
// service_traits::MD5Sum< ::as_arm_description::CheckCollisionValid > 
template<>
struct MD5Sum< ::as_arm_description::CheckCollisionValidRequest>
{
  static const char* value()
  {
    return MD5Sum< ::as_arm_description::CheckCollisionValid >::value();
  }
  static const char* value(const ::as_arm_description::CheckCollisionValidRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::as_arm_description::CheckCollisionValidRequest> should match 
// service_traits::DataType< ::as_arm_description::CheckCollisionValid > 
template<>
struct DataType< ::as_arm_description::CheckCollisionValidRequest>
{
  static const char* value()
  {
    return DataType< ::as_arm_description::CheckCollisionValid >::value();
  }
  static const char* value(const ::as_arm_description::CheckCollisionValidRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::as_arm_description::CheckCollisionValidResponse> should match 
// service_traits::MD5Sum< ::as_arm_description::CheckCollisionValid > 
template<>
struct MD5Sum< ::as_arm_description::CheckCollisionValidResponse>
{
  static const char* value()
  {
    return MD5Sum< ::as_arm_description::CheckCollisionValid >::value();
  }
  static const char* value(const ::as_arm_description::CheckCollisionValidResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::as_arm_description::CheckCollisionValidResponse> should match 
// service_traits::DataType< ::as_arm_description::CheckCollisionValid > 
template<>
struct DataType< ::as_arm_description::CheckCollisionValidResponse>
{
  static const char* value()
  {
    return DataType< ::as_arm_description::CheckCollisionValid >::value();
  }
  static const char* value(const ::as_arm_description::CheckCollisionValidResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // AS_ARM_DESCRIPTION_MESSAGE_CHECKCOLLISIONVALID_H
